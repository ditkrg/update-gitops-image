name: Update Values File

on:
  push:
    branches:
      - main
      - dev
    tags:
      - "v*" # Triggered by tags starting with 'v'

jobs:
  update-values:
    runs-on: ubuntu-latest

    steps:
      # - name: Setup Git
      #   run: apt-get update -y && apt-get install git -y

      - name: Checkout Target Repository
        uses: actions/checkout@v4
        with:
          repository: 5h4k4r/pilgrimage-gitops-shakar # Replace with the actual target repository
          token: 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 # insert the token

      - name: Determine Environment
        id: env
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            environment=production
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            environment=staging
          else
            environment=dev
          fi
          echo "::set-output name=environment::${environment}"

      - name: Determine Component Name
        id: component
        run: |
          component=$(basename $PWD)
          echo "::set-output name=component::${component}"

      - name: Update Values File
        run: |
          environment=${{ steps.env.outputs.environment }}
          component=${{ steps.component.outputs.component }}
          if [ $environment == "production" ]; then
            target_file="overlays/production/values.yaml"
          elif [ $environment == "staging" ]; then
            target_file="overlays/staging/values.yaml"
          else
            target_file="overlays/development/values.yaml"
          fi
          # Update the values.yaml file with the new image tag
          # You'll need to customize the logic to update your specific file
          # Example command to update image tag:
          # Update the image.tag field in the values.yaml file
          image_tag="$GITHUB_REF"
          echo "Helo" >> "oauth2-proxy/$target_file"

        env:
          GITHUB_REF: ${{ github.ref }}

      - name: print Values
        run: |
          environment=${{ steps.env.outputs.environment }}
          component=${{ steps.component.outputs.component }}
          branch_name="update-$component-$environment"

          echo "git checkout -b $branch_name"
          echo "Update $component/$target_file for $environment"

      - name: Commit Changes
        run: |
          environment=${{ steps.env.outputs.environment }}
          component=${{ steps.component.outputs.component }}
          branch_name="update-$component-$environment"
          target_file=${{ steps.update-values.outputs.target_file }}

          echo "git checkout -b $branch_name"
          echo "Update $component/$target_file for $environment"

          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Do not create a new branch if the branch already exists
          if [[ $(git ls-remote origin $branch_name) ]]; then
            git checkout $branch_name
          else
            git checkout -b $branch_name
          fi

          git add .
          git commit -S -m "Update oauth2-proxy/$target_file for $environment"
          git push origin $branch_name
